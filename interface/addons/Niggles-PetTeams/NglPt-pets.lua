-------------------------------------------------------------------------------
--                 L  O  C  A  L     V  A  R  I  A  B  L  E  S
-------------------------------------------------------------------------------

local addonName, L = ...;

local cpjGetPetStats       = C_PetJournal.GetPetStats;
local cpjGetPetInfoByPetID = C_PetJournal.GetPetInfoByPetID;
local floor                = math.floor;
local bitAnd               = bit.band;

local petBreeds =
{
  [0x00000100] = "(B/B)", --  3/13
  [0x00000200] = "(P/P)", --  4/14
  [0x00000400] = "(S/S)", --  5/15
  [0x00000800] = "(H/H)", --  6/16
  [0x00001000] = "(H/P)", --  7/17
  [0x00002000] = "(P/S)", --  8/18
  [0x00004000] = "(H/S)", --  9/19
  [0x00008000] = "(P/B)", -- 10/20
  [0x00010000] = "(S/B)", -- 11/21
  [0x00020000] = "(H/B)", -- 12/22
};

local baseStatProfiles =
{
  {8.5, 7.5, 8},
  {7, 8.5, 8.5},
  {6.5, 9, 8.5},
  {7, 9, 8},
  {7.5, 7.5, 9},
  {8, 7.5, 8.5},
  {9, 7, 8},
  {9, 8, 7},
  {8.5, 8, 7.5},
  {8, 8, 8},
  {8.5, 7, 8.5},
  {8.5, 9, 6.5},
  {8, 7, 9},
  {7.5, 8.5, 8},
  {8, 8.5, 7.5},
  {7, 7, 10},
  {8.5, 8.5, 7},
  {7.5, 8, 8.5},
  {7.5, 7, 9.5},
  {9, 7.5, 7.5},
  {9, 9, 6},
  {7.5, 9, 7.5},
  {8, 9, 7},
  {9.5, 8, 6.5},
  {9.5, 8.5, 6},
  {8, 9.5, 6.5},
  {8, 8.75, 7.25},
  {7, 8, 9},
  {9, 6.5, 8.5},
  {6, 8, 10},
  {8, 6.5, 9.5},
  {9, 8.5, 6.5},
  {9.5, 7.5, 7},
  {6.5, 8, 9.5},
  {18, 8, 8},
  {6.75, 10.5, 6.75},
  {7.5, 8.5, 8.5},
  {8.25, 8, 7.75},
  {8, 8.25, 7.75},
  {7.75, 8, 8.25},
  {8.25, 8.25, 7.5},
  {7.75, 8.25, 8},
  {8.25, 8.5, 7.25},
  {7.5, 8.25, 8.25},
  {7.75, 8.5, 7.75},
  {8.3, 7.9, 7.8},
  {8.125, 8.375, 7.5},
  {13, 8, 5.5},
  {7.625, 7.875, 8.5},
  {7.625, 8.25, 8.125},
  {7.75, 7.75, 8.5},
  {9.75, 7.25, 7},
  {7.5, 9.5, 7},
  {6.75, 9.25, 8},
  {8.75, 8.75, 6.5},
  {8.75, 8, 7.25},
  {8.5, 8.75, 6.75},
  {7.25, 8.75, 8},
  {7.625, 8.375, 8},
};

local speciesInfo =
{
  [39] = 65537, [40] = 8194, [41] = 514, [42] = 4099,
  [43] = 260, [44] = 1026, [45] = 258, [46] = 131077,
  [47] = 1286, [49] = 263, [50] = 65544, [51] = 1289,
  [52] = 229642, [55] = 19723, [56] = 8204, [57] = 513,
  [58] = 8196, [59] = 16393, [64] = 16385, [65] = 131073,
  [67] = 41226, [68] = 6410, [69] = 98565, [70] = 132358,
  [72] = 66829, [74] = 65541, [75] = 1038, [77] = 266,
  [78] = 131086, [83] = 8193, [84] = 229642, [85] = 16385,
  [86] = 4097, [87] = 1039, [89] = 2058, [90] = 4098,
  [92] = 266, [93] = 515, [94] = 1040, [95] = 266,
  [106] = 32769, [107] = 266, [111] = 131082, [114] = 131089,
  [115] = 266, [116] = 131082, [117] = 266, [118] = 266,
  [119] = 266, [120] = 266, [121] = 266, [122] = 1034,
  [124] = 266, [125] = 1034, [126] = 32778, [127] = 4102,
  [128] = 266, [130] = 266, [131] = 8198, [132] = 2056,
  [136] = 168202, [137] = 66829, [138] = 131329, [139] = 139534,
  [140] = 131855, [141] = 133381, [142] = 1295, [143] = 9486,
  [144] = 66821, [145] = 11521, [146] = 148754, [149] = 16403,
  [153] = 4106, [155] = 4106, [156] = 266, [157] = 266,
  [158] = 266, [159] = 2058, [160] = 522, [162] = 32783,
  [163] = 8207, [164] = 271, [165] = 16385, [166] = 4113,
  [167] = 18708, [168] = 1025, [169] = 1290, [170] = 4106,
  [171] = 4106, [172] = 32782, [173] = 4111, [174] = 271,
  [175] = 1038, [179] = 4105, [180] = 4105, [183] = 266,
  [186] = 9998, [187] = 8209, [188] = 2065, [189] = 266,
  [190] = 137233, [191] = 257, [192] = 16394, [193] = 527,
  [194] = 91402, [195] = 91141, [196] = 4105, [197] = 8210,
  [198] = 65546, [199] = 32778, [200] = 1037, [201] = 4106,
  [202] = 4106, [203] = 131085, [204] = 266, [205] = 4106,
  [206] = 82193, [207] = 8202, [209] = 266, [210] = 1034,
  [211] = 2057, [212] = 266, [213] = 1034, [215] = 32769,
  [217] = 4106, [218] = 513, [220] = 16394, [224] = 32770,
  [225] = 266, [226] = 522, [227] = 522, [228] = 4106,
  [229] = 266, [231] = 265, [232] = 8194, [233] = 8194,
  [234] = 32770, [235] = 32770, [236] = 2062, [237] = 258,
  [238] = 65538, [239] = 522, [240] = 273, [241] = 131082,
  [242] = 8206, [243] = 32789, [244] = 4108, [245] = 8202,
  [246] = 266, [247] = 2058, [248] = 8202, [249] = 4113,
  [250] = 8214, [251] = 273, [253] = 266, [254] = 9482,
  [255] = 2070, [256] = 4119, [258] = 2060, [259] = 131073,
  [260] = 8207, [261] = 513, [262] = 1025, [264] = 8209,
  [265] = 2072, [266] = 8209, [267] = 266, [268] = 524,
  [270] = 16401, [271] = 49414, [272] = 18452, [277] = 65537,
  [278] = 16394, [279] = 8202, [285] = 32791, [286] = 4104,
  [287] = 262, [289] = 2073, [291] = 131092, [292] = 266,
  [293] = 16394, [294] = 8202, [296] = 266, [297] = 538,
  [298] = 266, [301] = 65538, [302] = 4113, [303] = 1026,
  [306] = 65538, [307] = 266, [308] = 266, [309] = 8195,
  [310] = 8202, [311] = 265, [316] = 257, [317] = 273,
  [318] = 270, [319] = 32771, [320] = 4097, [321] = 2058,
  [323] = 8202, [325] = 42006, [328] = 522, [329] = 8202,
  [330] = 32778, [333] = 65546, [335] = 131092, [337] = 131082,
  [338] = 4097, [339] = 131082, [340] = 266, [341] = 266,
  [342] = 266, [343] = 8450, [346] = 266, [347] = 283,
  [348] = 8209, [374] = 258058, [378] = 218381, [379] = 230662,
  [380] = 131338, [381] = 16394, [383] = 73734, [385] = 206086,
  [386] = 66822, [387] = 1298, [388] = 6409, [389] = 261889,
  [391] = 17677, [392] = 83206, [393] = 220171, [395] = 6409,
  [396] = 73730, [397] = 213258, [398] = 83206, [399] = 9490,
  [400] = 82690, [401] = 6409, [402] = 147721, [403] = 42258,
  [404] = 131334, [405] = 4882, [406] = 22785, [407] = 75010,
  [408] = 66834, [409] = 42012, [410] = 83206, [411] = 778,
  [412] = 66818, [414] = 8458, [415] = 22542, [416] = 9482,
  [417] = 83206, [418] = 65810, [419] = 65793, [420] = 135425,
  [421] = 147727, [422] = 9486, [423] = 18705, [424] = 220171,
  [425] = 41234, [427] = 16642, [428] = 75010, [429] = 23054,
  [430] = 1039, [431] = 24594, [432] = 8458, [433] = 5394,
  [437] = 33034, [438] = 18450, [439] = 18441, [440] = 8970,
  [441] = 21517, [442] = 153629, [443] = 218378, [445] = 55306,
  [446] = 19209, [447] = 214278, [448] = 218381, [449] = 66826,
  [450] = 2312, [452] = 230666, [453] = 6152, [454] = 83206,
  [455] = 45066, [456] = 14607, [457] = 18440, [458] = 2321,
  [459] = 75010, [460] = 18702, [461] = 264, [463] = 18453,
  [464] = 17674, [465] = 8962, [466] = 5394, [467] = 22798,
  [468] = 22798, [469] = 23298, [470] = 70402, [471] = 60673,
  [472] = 114433, [473] = 16660, [474] = 1054, [475] = 131339,
  [477] = 65797, [478] = 213257, [479] = 65823, [480] = 18703,
  [482] = 1298, [483] = 131329, [484] = 75010, [485] = 22548,
  [487] = 234762, [488] = 131090, [489] = 41487, [491] = 9220,
  [492] = 18703, [493] = 6425, [494] = 6410, [495] = 131329,
  [496] = 147737, [497] = 153611, [498] = 24841, [499] = 4102,
  [500] = 47882, [502] = 131329, [503] = 66821, [504] = 33551,
  [505] = 70930, [506] = 84226, [507] = 147726, [508] = 4874,
  [509] = 22538, [511] = 66834, [512] = 150030, [513] = 261898,
  [514] = 261898, [515] = 261898, [517] = 8458, [518] = 2336,
  [519] = 22537, [521] = 32772, [523] = 18440, [525] = 132362,
  [528] = 147474, [529] = 4618, [530] = 22794, [532] = 2572,
  [534] = 42766, [535] = 16650, [536] = 20489, [537] = 6921,
  [538] = 10257, [539] = 230662, [540] = 230662, [541] = 23563,
  [542] = 131329, [543] = 17678, [544] = 197649, [545] = 9482,
  [546] = 149518, [547] = 120077, [548] = 261902, [549] = 230666,
  [550] = 230662, [552] = 72462, [553] = 230662, [554] = 20750,
  [555] = 23563, [556] = 149518, [557] = 103950, [558] = 8202,
  [559] = 23062, [560] = 34049, [562] = 9490, [564] = 133409,
  [565] = 131329, [566] = 147717, [567] = 33810, [568] = 16665,
  [569] = 131329, [570] = 33034, [571] = 1298, [572] = 2569,
  [573] = 99591, [626] = 112146, [627] = 36881, [628] = 33033,
  [629] = 4873, [630] = 42250, [631] = 20498, [632] = 33042,
  [633] = 151818, [634] = 16642, [635] = 41234, [637] = 66826,
  [638] = 23563, [639] = 230662, [640] = 218381, [641] = 218381,
  [644] = 230662, [645] = 24842, [646] = 197898, [647] = 107786,
  [648] = 137492, [649] = 12564, [650] = 8201, [652] = 65546,
  [665] = 65550, [671] = 8202, [675] = 230662, [677] = 9482,
  [678] = 18442, [679] = 66570, [680] = 66570, [699] = 213250,
  [702] = 132353, [703] = 65802, [706] = 9482, [707] = 1290,
  [708] = 230662, [709] = 197894, [710] = 82186, [711] = 66826,
  [712] = 66826, [713] = 16660, [714] = 99074, [716] = 20482,
  [717] = 150542, [718] = 24842, [722] = 180494, [723] = 18708,
  [724] = 33802, [725] = 65802, [726] = 5378, [727] = 206090,
  [728] = 197898, [729] = 218381, [730] = 214285, [731] = 20482,
  [732] = 24591, [733] = 66826, [737] = 9250, [739] = 9244,
  [740] = 246022, [741] = 131338, [742] = 1290, [743] = 132377,
  [744] = 220171, [745] = 16650, [746] = 2572, [747] = 180494,
  [748] = 259343, [749] = 66570, [750] = 66826, [751] = 213254,
  [752] = 131860, [753] = 16654, [754] = 226570, [755] = 40989,
  [756] = 17675, [757] = 1033, [758] = 8206, [792] = 131343,
  [800] = 131363, [802] = 529, [817] = 4105, [818] = 8207,
  [819] = 1038, [820] = 131082, [821] = 65546, [823] = 148746,
  [834] = 4105, [835] = 1034, [836] = 1043, [837] = 261897,
  [838] = 261898, [844] = 1039, [845] = 41226, [846] = 1054,
  [847] = 131082, [848] = 17677, [851] = 5394, [855] = 270,
  [856] = 147466, [868] = 16394, [903] = 32790, [1013] = 18708,
  [1039] = 2053, [1040] = 2058, [1042] = 8228, [1061] = 1034,
  [1062] = 180486, [1063] = 8209, [1068] = 42250, [1073] = 131082,
  [1117] = 293, [1124] = 8202, [1125] = 266, [1126] = 4106,
  [1127] = 8206, [1128] = 131338, [1142] = 65537, [1143] = 8202,
  [1144] = 16394, [1145] = 1034, [1146] = 4106, [1147] = 522,
  [1149] = 8202, [1150] = 16394, [1151] = 4106, [1152] = 2062,
  [1153] = 522, [1154] = 16394, [1155] = 2063, [1156] = 8202,
  [1157] = 131338, [1158] = 131082, [1159] = 131086, [1160] = 8201,
  [1161] = 41487, [1162] = 9220, [1163] = 6152, [1164] = 66834,
  [1165] = 41487, [1166] = 41487, [1167] = 41487, [1168] = 131082,
  [1174] = 131086, [1175] = 131338, [1176] = 65802, [1177] = 55304,
  [1178] = 522, [1179] = 271, [1180] = 42498, [1181] = 18450,
  [1182] = 131329, [1183] = 522, [1184] = 550, [1185] = 16394,
  [1196] = 16394, [1197] = 69642, [1198] = 8202, [1200] = 40998,
  [1201] = 32770, [1202] = 33030, [1204] = 65537, [1205] = 55590,
  [1206] = 163858, [1207] = 131109, [1208] = 196626, [1209] = 274,
  [1211] = 42498, [1212] = 42498, [1213] = 42498, [1226] = 42766,
  [1227] = 22537, [1228] = 10791, [1229] = 42024, [1230] = 22569,
  [1231] = 229642, [1232] = 164138, [1233] = 14891, [1234] = 22822,
  [1235] = 197642, [1236] = 8236, [1237] = 8231, [1238] = 2321,
  [1243] = 8202, [1244] = 4106, [1245] = 18698, [1248] = 294,
  [1255] = 266, [1256] = 98314, [1266] = 551, [1276] = 9738,
  [1303] = 8233, [1304] = 8194, [1305] = 8201, [1320] = 1034,
  [1321] = 46607, [1322] = 6673, [1323] = 100140, [1324] = 90378,
  [1325] = 24842, [1326] = 24842, [1328] = 153866, [1329] = 91146,
  [1330] = 12050, [1331] = 41482, [1332] = 3594, [1333] = 25901,
  [1334] = 22546, [1335] = 8202, [1336] = 153866, [1337] = 2582,
  [1338] = 135425, [1343] = 30218, [1344] = 4134, [1345] = 18442,
  [1346] = 16394, [1348] = 8202, [1349] = 554, [1351] = 4106,
  [1363] = 8202, [1364] = 558, [1365] = 16394, [1384] = 4123,
  [1385] = 42762, [1386] = 559, [1387] = 47631, [1394] = 2057,
  [1395] = 2058, [1396] = 8201, [1403] = 103946, [1411] = 32778,
  [1412] = 3594, [1416] = 4106, [1426] = 2096, [1427] = 147249,
  [1428] = 4106, [1430] = 261898, [1432] = 261898, [1434] = 261898,
  [1435] = 2336, [1441] = 131329, [1442] = 2058, [1446] = 32778,
  [1447] = 14858, [1448] = 229642, [1449] = 522, [1450] = 8202,
  [1451] = 1034, [1454] = 1034, [1455] = 229642, [1456] = 229642,
  [1457] = 229642, [1458] = 229642, [1462] = 229642, [1463] = 229642,
  [1464] = 229642, [1465] = 229642, [1466] = 229642, [1467] = 1546,
  [1468] = 168754, [1469] = 168754, [1470] = 168754, [1471] = 32778,
  [1478] = 4106, [1495] = 100147, [1511] = 1034, [1515] = 8202,
  [1516] = 32778, [1517] = 527, [1518] = 527, [1521] = 8202,
  [1523] = 1034, [1524] = 20490, [1530] = 522, [1531] = 4107,
  [1532] = 8214, [1533] = 8204, [1536] = 266, [1537] = 2058,
  [1538] = 1034, [1539] = 522, [1540] = 8202, [1541] = 32778,
  [1542] = 8202, [1543] = 4104, [1544] = 32778, [1545] = 229642,
  [1546] = 32778, [1563] = 22026, [1564] = 4106, [1565] = 103946,
  [1566] = 1034, [1567] = 8206, [1568] = 8202, [1569] = 4148,
  [1570] = 8214, [1571] = 22794, [1572] = 50954, [1573] = 50954,
  [1574] = 8245, [1575] = 32772, [1576] = 566, [1577] = 229642,
  [1578] = 2582, [1579] = 2582, [1581] = 2582, [1582] = 2582,
  [1583] = 2582, [1586] = 24842, [1587] = 24842, [1588] = 24842,
  [1589] = 24842, [1590] = 180486, [1591] = 180486, [1592] = 180486,
  [1593] = 180486, [1594] = 22794, [1595] = 22794, [1596] = 8214,
  [1597] = 8214, [1598] = 18708, [1599] = 18708, [1600] = 11573,
  [1601] = 566, [1602] = 8246, [1603] = 16412, [1605] = 4122,
  [1615] = 5394, [1622] = 2057, [1623] = 167946, [1624] = 522,
  [1625] = 4106, [1626] = 131082, [1627] = 16394, [1628] = 229642,
  [1629] = 229386, [1631] = 1034, [1632] = 22538, [1633] = 32778,
  [1634] = 266, [1636] = 4106, [1639] = 4151, [1642] = 4106,
  [1645] = 4102, [1655] = 202506, [1656] = 261898, [1660] = 1038,
  [1661] = 8243, [1662] = 514, [1663] = 6153, [1664] = 270,
  [1665] = 16440, [1672] = 2105, [1687] = 301, [1688] = 14889,
  [1690] = 8250, [1691] = 8202, [1692] = 32778, [1693] = 522,
  [1725] = 555, [1730] = 65290, [1740] = 65290, [1741] = 65290,
  [1764] = 1083, [1765] = 2107, [1766] = 571,
};

-------------------------------------------------------------------------------
--                 L  O  C  A  L     F  U  N  C  T  I  O  N  S
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
--                 A  D  D  O  N     F  U  N  C  T  I  O  N  S
-------------------------------------------------------------------------------

function L.petGetBreed(petGuid)
  -- Local Variables
  local _;
  local baseStat;
  local breedsHealth = 0;
  local breedsPower = 0;
  local breedsSpeed = 0;
  local petBreed;
  local petHealth;
  local petLevel;
  local petMultiplier;
  local petPower;
  local petQuality;
  local petSpeciesId;
  local petSpeed;
  local petStatProfile;

  -- Get the pet's species and level
  petSpeciesId, _, petLevel = cpjGetPetInfoByPetID(petGuid);
  if ((petSpeciesId ~= nil) and (speciesInfo[petSpeciesId] ~= nil)) then
    -- Get the pet's stats
    _, petHealth, petPower, petSpeed, petQuality = cpjGetPetStats(petGuid);
    if (petPower ~= nil) then
      -- Work out the multiplier for the pet's quality and level
      petMultiplier  = (1+((petQuality-1)/10))*petLevel;
      petStatProfile = baseStatProfiles[speciesInfo[petSpeciesId]%256];

      -- Work out the possible breeds the pet could be, based on its power
      baseStat  = petStatProfile[2];
      breedMask = 0;
      if (floor((baseStat*petMultiplier)+0.4999) == petPower) then
        breedMask = breedMask+0x00004C00;
      end
      if (floor(((baseStat+0.4)*petMultiplier)+0.4999) == petPower) then
        breedMask = breedMask+0x00030000;
      end
      if (floor(((baseStat+0.5)*petMultiplier)+0.4999) == petPower) then
        breedMask = breedMask+0x00000100;
      end
      if (floor(((baseStat+0.9)*petMultiplier)+0.4999) == petPower) then
        breedMask = breedMask+0x0000B000;
      end
      if (floor(((baseStat+2.0)*petMultiplier)+0.4999) == petPower) then
        breedMask = breedMask+0x00000200;
      end
      petBreed = breedMask;

      -- Work out the possible breeds the pet could be, based on its speed
      baseStat  = petStatProfile[3];
      breedMask = 0;
      if (floor((baseStat*petMultiplier)+0.4999) == petSpeed) then
        breedMask = breedMask+0x00001A00;
      end
      if (floor(((baseStat+0.4)*petMultiplier)+0.4999) == petSpeed) then
        breedMask = breedMask+0x00028000;
      end
      if (floor(((baseStat+0.5)*petMultiplier)+0.4999) == petSpeed) then
        breedMask = breedMask+0x00000100;
      end
      if (floor(((baseStat+0.9)*petMultiplier)+0.4999) == petSpeed) then
        breedMask = breedMask+0x00016000;
      end
      if (floor(((baseStat+2.0)*petMultiplier)+0.4999) == petSpeed) then
        breedMask = breedMask+0x00000400;
      end
      petBreed = bitAnd(petBreed, breedMask);

      -- Adjust some variables to make the Health calculations simpler
      petHealth     = petHealth-100;
      petMultiplier = petMultiplier*5;
     
      -- Work out the possible breeds the pet could be, based on its health
      baseStat  = petStatProfile[1];
      breedMask = 0;
      if (floor((baseStat*petMultiplier)+0.4999) == petHealth) then
        breedMask = breedMask+0x00002600;
      end
      if (floor(((baseStat+0.4)*petMultiplier)+0.4999) == petHealth) then
        breedMask = breedMask+0x00018000;
      end
      if (floor(((baseStat+0.5)*petMultiplier)+0.4999) == petHealth) then
        breedMask = breedMask+0x00000100;
      end
      if (floor(((baseStat+0.9)*petMultiplier)+0.4999) == petHealth) then
        breedMask = breedMask+0x00025000;
      end
      if (floor(((baseStat+2.0)*petMultiplier)+0.4999) == petHealth) then
        breedMask = breedMask+0x00000800;
      end
      petBreed = bitAnd(petBreed, breedMask);
    end

    -- Apply a mask for the allowed breeds for the pet's species
    petBreed = bitAnd(petBreed, speciesInfo[petSpeciesId]);
  end

  return (petBreeds[petBreed] or "(?/?)");
end
